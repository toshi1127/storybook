// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`docs-mdx-compiler-plugin story-args.mdx 1`] = `
"/* @jsxRuntime classic */
/* @jsx mdx */
import { assertIsFn, AddContext } from '@storybook/addon-docs/blocks';

import { Button } from '@storybook/react/demo';
import { Story, Meta } from '@storybook/addon-docs/blocks';
export const Template = (args) => <Button mdxType=\\"Button\\">Component notes</Button>;

const layoutProps = {
  Template,
};
const MDXLayout = 'wrapper';
function MDXContent({ components, ...props }) {
  return (
    <MDXLayout {...layoutProps} {...props} components={components} mdxType=\\"MDXLayout\\">
      <Meta title=\\"Button\\" mdxType=\\"Meta\\" />
      <h1>{\`Args\`}</h1>

      <Story
        name=\\"component notes\\"
        args={{
          a: 1,
          b: 2,
        }}
        argTypes={{
          a: {
            name: 'A',
          },
          b: {
            name: 'B',
          },
        }}
        mdxType=\\"Story\\"
      >
        {Template.bind({})}
      </Story>
    </MDXLayout>
  );
}

MDXContent.isMDXComponent = true;

export const componentNotes = Template.bind({});
componentNotes.storyName = 'component notes';
componentNotes.argTypes = {
  a: {
    name: 'A',
  },
  b: {
    name: 'B',
  },
};
componentNotes.args = {
  a: 1,
  b: 2,
};
componentNotes.parameters = { storySource: { source: 'args => <Button>Component notes</Button>' } };

const componentMeta = { title: 'Button', includeStories: ['componentNotes'] };

const mdxStoryNameToKey = { 'component notes': 'componentNotes' };

componentMeta.parameters = componentMeta.parameters || {};
componentMeta.parameters.docs = {
  ...(componentMeta.parameters.docs || {}),
  page: () => (
    <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentMeta={componentMeta}>
      <MDXContent />
    </AddContext>
  ),
};

export default componentMeta;
"
`;
